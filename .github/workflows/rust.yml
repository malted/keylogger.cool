name: Rust CI/CD Workflow

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: macos-13-xlarge
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: macos-13-xlarge
    steps:
    - uses: actions/checkout@v3

    - name: Set Prerelease Flag
      id: prerelease
      run: echo "PRERELEASE=$(echo $GITHUB_REF | grep -qE 'refs/tags/v0\.' && echo 'true' || echo 'false')" >> $GITHUB_ENV

    - name: Build Release
      run: cargo build --release --verbose

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: ${{ env.PRERELEASE }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/your-binary-name
        asset_name: your-binary-name
        asset_content_type: application/octet-stream
